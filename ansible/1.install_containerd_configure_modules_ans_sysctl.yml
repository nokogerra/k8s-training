---
#This playbook will install containerd, kubeadm, kubectl and kubelet, will configure containerd, needed kernel modules and sysctl parameters
#packagess are going to be put on apt hold
- name: "install containerd, configure modules and sysctl on all nodes"
  hosts: all
  tasks:
  - name: 'disable UFW'
    community.general.ufw:
      state: disabled
  - name: "Add an apt signing key for K8s"
    apt_key:
      url: "{{ kubernetes_gpg_url }}"
      state: present
  - name: "Add apt K8s repository for stable version"
    apt_repository:
      repo: "{{ kubernetes_repo }}"
      state: present
  - name: "install packages"
    apt:
      name: "{{ item.name }}{{ item.version }}"
      state: present
      update_cache: yes
      allow_downgrade: yes
    loop: "{{ common_packages }}"
  - name: "hold installed packages"
    dpkg_selections:
      name: "{{ item.name }}"
      selection: hold
    loop: "{{ common_packages }}"
  - name: "get held packages"
    shell: apt-mark showhold
    register: held_packages
  - name: "show held packages"
    debug:
      msg: "{{ held_packages.stdout_lines }}"
  - name: "enable kernel modules needed by containerd"
    ansible.builtin.shell: "sudo modprobe {{ item }}"
    loop: "{{ kernel_modules }}"
  - name: "create kernel modules auto-load config"
    ansible.builtin.template:
      src: "{{ templates_dir }}/containerd_modules.j2"
      dest: "{{ kernel_modules_path }}"
  - name: "configure sysctl params needed by K8s"
    ansible.builtin.template:
      src: "{{ templates_dir }}/sysctl_params.j2"
      dest: "{{ sysctl_params_path }}"
  - name: "apply systcl params"
    ansible.builtin.shell: sudo sysctl --system
  - name: "create containerd dir"
    file:
      name: "{{ containerd_dir }}"
      state: directory
  - name: "create containerd config"
    copy:
      src: "{{ templates_dir }}/containerd_conf.toml"
      dest: "{{ containerd_dir }}/{{ containerd_conf }}"
  - name: "restart containerd"
    shell: sudo systemctl restart containerd
  - name: "make sure the needed services are enabled"
    service:
      name: "{{ item }}"
      enabled: yes
    loop: "{{ common_services }}"
...
